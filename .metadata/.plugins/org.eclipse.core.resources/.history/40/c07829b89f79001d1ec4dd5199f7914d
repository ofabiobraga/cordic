#include <stdio.h>
#include <math.h>

#define RESOLUTION 16

void cordic_compute(
        short int x,
        short int y,
        short int z,
        short int * x_out,
        short int * y_out,
        short int * z_out
) {
    short int x_tmp, y_tmp, z_tmp;
    short int = 0;

    for (i = 0; i < RESOLUTION; i++) {
        x_tmp = (y >> i);
        y_tmp = (x >> i);
        d = (z < 0) ? -1 : 1;

        if (d < 0) {
            y_tmp =
        } else {

        }
    }
}

void cordic_sin()
{

}

void cordic_cos()
{

}

void cordic_sinh()
{

}

void cordic_cosh()
{

}

void cordic_divide()
{

}

void cordic_multiply()
{

}

void cordic_pol2rect()
{

}

void cordic_rect2pol()
{

}


int __sign(short int value)
{
    return (value < 0) ? -1 : 1;
}
